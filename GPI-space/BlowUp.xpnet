<defun name="BlowUp">
    <in name="in" type="string" place="inScheme"/>
    <out name="out" type="string" place="outScheme"/>

    <net>
        <place name="inScheme" type="string"/>
        <place name="outScheme" type="string"/>
        <place name="charts" type="string"/>
        <place name="blowUpCharts" type="string"/>
        <place name="assembledCharts" type="list">
            <token>List()</token>
        </place>
        <place name="chartcount" type="int"/>
        <place name="listsize" type="int">
            <token>0</token>
        </place>

        <transition name="disassemble">
            <defun>
                <in name="inScheme" type="string"/>
                <out name="charts" type="list"/>
                <out name="chartcount" type="int"/>
            </defun>

            <connenct-in port="inScheme" place="inScheme"/>
            <connect-out port="chartcount" place="chartcount"/>
            <connect-out-many port="charts" place="charts"/>
        </transition>

        <transition name="blowUp">
            <defun>
                <in name="charts" type="string"/>
                <out name="blowUpCharts" type="list"/>
                <inout name="chartcount" type="int"/>
            </defun>

            <connenct-in port="charts" place="charts"/>
            <connect-out-many port="blowUpCharts" place="blowUpCharts"/>
            <connect-inout port="chartcount" place="chartcount"/>
        </transition>

        <transition name="assemble">
            <defun>
                <in name="blowUpCharts" type="string"/>
                <inout name="assembledCharts" type="list"/>
                <inout name="listsize" type="int"/>
                <expression>
                    ${listsize} := ${listsize}+1;
                </expression>
            </defun>

            <connect-in port="blowUpCharts" place="blowUpCharts"/>
            <connect-inout port="assembledCharts" place="assembledCharts"/>
            <connect-inout port="listsize" place="listsize"/>
        </transition>

        <transition name="conversion">
            <defun>
                <in name="assembledCharts" type="list"/>
                <in name="chartcount" type="int"/>
                <in name="listsize" type="int"/>
                <out name="outScheme" type="string"/>
            </defun>

            <condition>
                ${chartcount} :eq: ${listsize}
            </condition>

            <connenct-in port="assembledCharts" place="assembledCharts"/>
            <connect-in port="chartcount" place="chartcount"/>
            <connect-in port="listsize" place="listsize"/>
            <connect-out port="outScheme" place="outScheme"/>
        </transition>
    </net>
</defun>
